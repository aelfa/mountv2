name: Publish DEV Releases to Hub
on:
  push:
    branches: dev

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=sudobox/${GITHUB_REPOSITORY//docker-/}
          DOCKER_IMAGE=ghcr.io/${GITHUB_REPOSITORY//docker-/}
          VERSION=nightly
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=vendor::${{ github.repository_owner }}

      - name: Shellcheck
        run: |
          shellcheck --version
          if [[ -d ./root ]]; then
            find "./root" -type f -print -exec shellcheck {} \;
          else
            true
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64,linux/arm32v7 

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ghcr_TOKEN }}

      - name: Dive Analysis
        uses: yuichielectric/dive-action@0.0.4
        with:
          image: "${{ steps.prep.outputs.tag }}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64,linux/arm32v7 

          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.prep.outputs.tag }}
            ghcr.io/${{ steps.prep.outputs.tag }}
          labels: |
            org.opencontainers.image.vendor=${{ steps.prep.outputs.vendor }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
