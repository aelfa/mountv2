name: Publish DEV Releases to Hub
on:
  push:
    branches: main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=sudobox/sudobox-mount
          VERSION=latest
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64

          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}: build

on:
  push:
    branches-ignore:
      - 'dependabot/**'

jobs:
  multi:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      -
        name: Build and push arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./linux-arm64.Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            sudobox/sudobox-mount:arm64-alpine
            ghcr.io/sudobox-io/docker-mount:arm64-alpine
      -
        name: Build and push amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./linux-amd64.Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            sudobox/sudobox-mount:amd64-alpine
            ghcr.io/sudobox-io/docker-mount:amd64-alpine
      -
        name: Build and push arm32v7
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./linux-arm-v7.Dockerfile
          platforms: linux/armhf
          push: true
          tags: |
            sudobox/sudobox-mount:armv7-alpine
            ghcr.io/sudobox-io/docker-mount:armv7-alpine 
