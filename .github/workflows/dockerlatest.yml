name: Publish latest Releases to Hub
on:
  push:
    branches: master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2


      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Print environment variables
        run: |
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME

      - name: Prepare
        id: prep
        run: |
          REPO="${GITHUB_REPOSITORY} |sed 's/.*://g'"
          DOCKER_IMAGE=${{ secrets.DOCKER_USER }}/${REPO}
          VERSION=latest
          #REPO="${GITHUB_REPOSITORY} | sed 's/.*://g'"
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=title::${GITHUB_REPOSITORY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.date=${{ steps.prep.outputs.date }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
