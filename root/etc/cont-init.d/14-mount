#!/usr/bin/with-contenv bash
# shellcheck shell=bash
# Copyright (c) 2020, MrDoob
# All rights reserved.
function log() {
echo "[Mount] ${1}"
}

config=/config/rclone/rclone-docker.conf
drivespace=$(df -BG / --local | tail -n +2 | awk '{print $4}' | sed -e 's/G//g')
checkspace=$(echo $(( ( ${drivespace} )/100*20 | bc )) | sed -r 's/([^0-9]*([0-9]*)){1}.*/\2/')
rclone_value=$(rclone listremotes --config=${config} | grep "$filter" | sed -e 's/[GDSA00-99C:]//g' | sed '/^$/d' | wc -l)
endvalue=$(echo $(( ( ${checkspace} ) /${rclone_value} | bc )) | sed -r 's/([^0-9]*([0-9]*)){1}.*/\2/')
if [[ ${endvalue} -le "10" ]]; then
   VFS_CACHE_MAX_SIZE=off
elif [[ ${endvalue} -gt "10" && ${endvalue} -le "50" ]]; then
   VFS_CACHE_MAX_SIZE=10G
elif [[ ${endvalue} -gt "50" && ${endvalue} -le "100" ]]; then
   VFS_CACHE_MAX_SIZE=20G
elif [[ ${endvalue} -gt "101" ]]; then
   VFS_CACHE_MAX_SIZE=25G
else
   VFS_CACHE_MAX_SIZE=${VFS_CACHE_MAX_SIZE}
fi
## function source start
IFS=$'\n'
filter="$1"
config=/config/rclone/rclone-docker.conf
mapfile -t mounts < <(eval rclone listremotes --config=${config} | grep "$filter" | sed -e 's/[GDSA00-99C:]//g' | sed '/^$/d')
## function source end
DIR_CACHE_TIME=${DIR_CACHE_TIME:-72h}
VFS_READ_CHUNK_SIZE=${VFS_READ_CHUNK_SIZE:-64M}
VFS_CACHE_MAX_AGE=${VFS_CACHE_MAX_AGE:-1h}
VFS_READ_CHUNK_SIZE_LIMIT=${VFS_READ_CHUNK_SIZE_LIMIT:-128M}
VFS_CACHE_MODE=${VFS_CACHE_MODE:-writes}
VFS_CACHE_MAX_SIZE=${VFS_CACHE_MAX_SIZE}
BUFFER_SIZE=${BUFFER_SIZE:-32M}
PUID=${PUID:-911}
PGID=${PGID:-911}
LOGLEVEL=${LOGLEVEL:-ERROR}
UAGENT=${UAGENT:-somerandstring}
##### FOLDER START #####
SMOUNT=/config/scripts
SDOWN=/mnt/downloads
SUNION=/mnt/unionfs
SCACHE=/tmp/rclone_cache
DFOLD=/config/discord
mkdir -p ${SMOUNT} && chown -hR abc:abc ${SMOUNT} && chmod -R 775 ${SMOUNT}
mkdir -p ${SDOWN} && chown -hR abc:abc ${SDOWN} && chmod -R 775 ${SDOWN}
mkdir -p ${SUNION} && chown -hR abc:abc ${SUNION} && chmod -R 775 ${SUNION}
mkdir -p ${SCACHE} && chown -hR abc:abc ${SCACHE} && chmod -R 775 ${SCACHE}
mkdir -p ${DFOLD} && chown -hR abc:abc ${DFOLD} && chmod -R 775 ${DFOLD}
##### FOLDER END #####
rm -rf /tmp/rclone-mount.file
touch /tmp/rclone-mount.file
##### RUN MOUNT #####
for i in ${mounts[@]}; do
  let "RC_ADDRESS++"
  if [[ $RC_ADDRESS -gt "1" ]]; then
     RC_ADDRESS=5572
  fi
  if [ ! -d "/mnt/drive-$i" ]; then     
     mkdir -p /mnt/drive-$i && mkdir -p /tmp/rclone_cache/$i
     chown -hR abc:abc /mnt/drive-$i && chown -hR abc:abc /tmp/rclone_cache/$i
     chmod -R 775 /mnt/drive-$i && chmod -R 775 /tmp/rclone_cache/$i
  fi
  if [ "$(ls /mnt/drive-$i | wc -l)" -gt 1 ]; then     
    fusermount -uz /mnt/drive-$i
  fi
  rm -f ${SMOUNT}/$i-mount.sh
  mkdir -p /config/logs/ && mkdir -p /config/logs/$i/
  touch /config/logs/$i/rclone-$i.log
  chmod -R 775 /config/logs/ && chown -hR abc:abc /config/logs/
  truncate -s 0 /config/logs/*/**.log >> /dev/null
  ddaylic=$(date +"%Y")
  dday=$(date)
  echo -n "/mnt/drive-$i=NC:" >>/tmp/rclone-mount.file
  echo -e "#!/usr/bin/with-contenv bash
# shellcheck shell=bash ##
# Copyright (c) ${ddaylic}, MrDoob ##
# rclone mount for $i over-shell-exec-command ##
# create day = ${dday}
# All rights reserved. ##
##\n
rclone mount $i: /mnt/drive-$i \\
    --config=${config} \\
    --log-file=/config/logs/$i/rclone-$i.log \\
    --log-level=${LOGLEVEL} \\
    --uid=${PUID} --gid=${PGID} \\
    --cache-db-purge --drive-chunk-size=16M \\
    --allow-other --allow-non-empty \\
    --drive-skip-gdocs --timeout=1h \\
    --cache-dir=/tmp/rclone_cache/$i \\
    --tpslimit=8 --tpslimit-burst=8 \\ 
    --user-agent=${UAGENT} --no-checksum \\
    --no-modtime --no-seek \\
    --buffer-size=${BUFFER_SIZE} \\
    --dir-cache-time=${DIR_CACHE_TIME} \\
    --vfs-cache-mode=${VFS_CACHE_MODE} \\
    --vfs-cache-max-age=${VFS_CACHE_MAX_AGE} \\
    --vfs-cache-max-size=${VFS_CACHE_MAX_SIZE} \\
    --vfs-read-chunk-size-limit=${VFS_READ_CHUNK_SIZE_LIMIT} \\
    --vfs-read-chunk-size=${VFS_READ_CHUNK_SIZE} \\
    --daemon \n" >> ${SMOUNT}/$i-mount.sh
    chmod a+x ${SMOUNT}/$i-mount.sh && chown abc:abc ${SMOUNT}/$i-mount.sh
    log "-->> Mount file created for $i <<--"
done

#EOF#
    #### --vfs-cache-max-age=${VFS_CACHE_MAX_AGE} \\
    #### --vfs-cache-max-size=${VFS_CACHE_MAX_SIZE}
    #### --buffer-size=${BUFFER_SIZE} & \n" >> ${SMOUNT}/$i-mount.sh
    #### --rc --rc-addr=127.0.0.1:${RC_ADDRESS} \\
    #### --rc-no-auth
