#!/usr/bin/with-contenv bash
# shellcheck shell=bash
# Copyright (c) 2020, MrDoob
# All rights reserved.
function log() {
echo "[DOCKER] ${1}"
}
function startup() {
SERVICE=(pgrep -x mergerfs)
LSFOLDER=$(ls /mnt/unionfs/ | wc -l)
if [[ -z ${SERVICE} && ${LSFOLDER} != '0' ]]; then
   restart_container
else
   wait_for
fi
}
function wait_for() {
  log " -> wait for mounted drives <- "
  sleep 5
  startup
}
function restart_container() {
log " -------------------------------"
log " -->    INSTALL DOCKER      <---"
log " -------------------------------"
apk add docker --quiet --no-cache --force-refresh --no-progress
sleep 3
docker ps -a -q --format '{{.Names}}' | sort | sed -e 's/oauth//g' | sed -e 's/portainer//g' | sed -e 's/traefik//g' | sed -e 's/mounts//g' | sed '/^$/d' > /tmp/dockers
# docker restart plex sonarr radarr sonarr sonarr4k radarr4k radarrhdr sonarrhdr emby >> /dev/null
containers=$(grep -E 'plex|arr|emby' /tmp/dockers)
for container in $containers; do
    log " -->> Stopping $container <<-- "
    docker stop $container >> /dev/null
done
log " --> sleeping 5secs for graceful stopped containers <--"
sleep 5
for container in $containers; do
    log " -->> Starting $container <<-- "
    docker start $container >> /dev/null
done
sleep 5
apk del docker --quiet --no-progress && apk del --quiet --clean-protected --no-progress
log " -------------------------------"
log " -->  restart dockers done  <<--"
log " -->  purge docker install  <<--"
log " -------------------------------"
}
#>EOF<#

startup
